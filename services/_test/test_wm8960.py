#!/usr/bin/env python3
"""
–¢–µ—Å—Ç-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ WM8960 Audio Board —Å Bedrock 2.0
–ó–∞–ø—É—Å–∫: python3 test_wm8960.py
"""

import os
import sys
import subprocess
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ Bedrock
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

try:
    from services.audio_service import AudioService
    from services.volume_service import VolumeControlService
    from app.logger import app_logger as logger
except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Bedrock –º–æ–¥—É–ª–µ–π: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–ø–∫–∏ Bedrock")
    sys.exit(1)

def test_wm8960_detection():
    """–¢–µ—Å—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è WM8960"""
    print("üîç === –¢–ï–°–¢ –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø WM8960 ===")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º ALSA –∫–∞—Ä—Ç—ã
        result = subprocess.run(['aplay', '-l'], capture_output=True, text=True)
        if result.returncode == 0:
            print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
            for line in result.stdout.split('\n'):
                if 'wm8960' in line.lower():
                    print(f"‚úÖ WM8960 –Ω–∞–π–¥–µ–Ω: {line.strip()}")
                elif 'card' in line.lower():
                    print(f"   {line.strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–∫—Å–µ—Ä—ã
        result = subprocess.run(['amixer', 'scontrols'], capture_output=True, text=True)
        if result.returncode == 0:
            wm8960_mixers = []
            for line in result.stdout.split('\n'):
                if 'Simple mixer control' in line:
                    for mixer_name in ['Headphone', 'Speaker', 'Playback']:
                        if mixer_name in line:
                            wm8960_mixers.append(mixer_name)
            
            if wm8960_mixers:
                print(f"‚úÖ WM8960 –º–∏–∫—Å–µ—Ä—ã –Ω–∞–π–¥–µ–Ω—ã: {wm8960_mixers}")
            else:
                print("‚ùå WM8960 –º–∏–∫—Å–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ WM8960: {e}")

def test_audio_service():
    """–¢–µ—Å—Ç AudioService"""
    print("\nüéµ === –¢–ï–°–¢ AUDIO SERVICE ===")
    
    try:
        audio = AudioService()
        info = audio.get_device_info()
        
        print(f"üîß –ê—É–¥–∏–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {info.get('device', 'Unknown')}")
        print(f"üîß –¢–∏–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: {info.get('device_type', 'Unknown')}")
        print(f"üîß ALSA –¥–æ—Å—Ç—É–ø–Ω–æ: {info.get('alsa_available', False)}")
        print(f"üîß WM8960 –æ–±–Ω–∞—Ä—É–∂–µ–Ω: {info.get('wm8960_detected', False)}")
        print(f"üîß Pygame –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: {info.get('mixer_initialized', False)}")
        
        if info.get('wm8960_detected'):
            print("‚úÖ AudioService –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏–ª WM8960")
        else:
            print("‚ö†Ô∏è AudioService –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª WM8960")
            
        # –¢–µ—Å—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª)
        test_sound = "media/ringtones/robot.mp3"  # –ò–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π
        if os.path.exists(test_sound):
            print(f"üéµ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: {test_sound}")
            audio.play(test_sound)
            time.sleep(2)
            audio.stop()
            print("‚úÖ –¢–µ—Å—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω")
        else:
            print(f"‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {test_sound}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ AudioService: {e}")

def test_volume_service():
    """–¢–µ—Å—Ç VolumeService"""
    print("\nüîä === –¢–ï–°–¢ VOLUME SERVICE ===")
    
    try:
        volume = VolumeControlService()
        status = volume.get_status()
        
        print(f"üîß –ê–∫—Ç–∏–≤–Ω—ã–π –º–∏–∫—Å–µ—Ä: {status.get('active_mixer', 'None')}")
        print(f"üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–∫—Å–µ—Ä—ã: {len(status.get('available_mixers', []))}")
        print(f"üîß WM8960 –æ–±–Ω–∞—Ä—É–∂–µ–Ω: {status.get('wm8960_detected', False)}")
        print(f"üîß WM8960 –º–∏–∫—Å–µ—Ä—ã: {status.get('wm8960_mixers', [])}")
        print(f"üîß –¢–µ–∫—É—â–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å: {status.get('current_volume', 0)}%")
        print(f"üîß GPIO –¥–æ—Å—Ç—É–ø–Ω–æ: {status.get('gpio_available', False)}")
        
        if status.get('wm8960_detected'):
            print("‚úÖ VolumeService –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–∞—Ä—É–∂–∏–ª WM8960")
            
            # –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
            current_vol = volume.get_volume()
            print(f"üîä –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ (—Ç–µ–∫—É—â–∞—è: {current_vol}%)")
            
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å
            volume.volume_up_manual()
            time.sleep(0.5)
            new_vol = volume.get_volume()
            print(f"üìà –ü–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è: {new_vol}%")
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
            volume.volume_down_manual()
            time.sleep(0.5)
            final_vol = volume.get_volume()
            print(f"üìâ –ü–æ—Å–ª–µ —É–º–µ–Ω—å—à–µ–Ω–∏—è: {final_vol}%")
            
            if new_vol > current_vol:
                print("‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç")
            else:
                print("‚ö†Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ö†Ô∏è VolumeService –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª WM8960")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ VolumeService: {e}")

def test_mixer_commands():
    """–¢–µ—Å—Ç –ø—Ä—è–º—ã—Ö –∫–æ–º–∞–Ω–¥ –∞–º–∏–∫—Å–µ—Ä–∞"""
    print("\nüéõÔ∏è === –¢–ï–°–¢ –ö–û–ú–ê–ù–î –ê–ú–ò–ö–°–ï–†–ê ===")
    
    wm8960_mixers = ['Headphone', 'Speaker', 'Playback']
    
    for mixer in wm8960_mixers:
        try:
            result = subprocess.run(['amixer', 'get', mixer], capture_output=True, text=True)
            if result.returncode == 0:
                print(f"‚úÖ –ú–∏–∫—Å–µ—Ä '{mixer}' –¥–æ—Å—Ç—É–ø–µ–Ω")
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â—É—é –≥—Ä–æ–º–∫–æ—Å—Ç—å
                for line in result.stdout.split('\n'):
                    if '[' in line and '%' in line:
                        print(f"   –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {line.strip()}")
                        break
            else:
                print(f"‚ùå –ú–∏–∫—Å–µ—Ä '{mixer}' –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∏–∫—Å–µ—Ä–∞ '{mixer}': {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéß === –¢–ï–°–¢ WM8960 AUDIO BOARD –î–õ–Ø BEDROCK 2.0 ===\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ Raspberry Pi
    try:
        with open('/proc/cpuinfo', 'r') as f:
            cpuinfo = f.read()
            if 'Raspberry Pi' not in cpuinfo:
                print("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω Raspberry Pi")
    except:
        pass
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_wm8960_detection()
    test_mixer_commands()
    test_audio_service()
    test_volume_service()
    
    print("\nüèÅ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
    print("–ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω WM8960 –¥—Ä–∞–π–≤–µ—Ä")
    print("2. –ó–∞–≥—Ä—É–∂–µ–Ω –ª–∏ overlay –≤ /boot/config.txt")
    print("3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ —Å–∏—Å—Ç–µ–º–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏")
    print("4. –ü–æ–¥–∫–ª—é—á–µ–Ω—ã –ª–∏ –¥–∏–Ω–∞–º–∏–∫–∏/–Ω–∞—É—à–Ω–∏–∫–∏ –∫ WM8960")

if __name__ == "__main__":
    main()