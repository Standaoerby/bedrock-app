# Microsoft.PowerShell_profile.ps1 - PowerShell –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è bedrock-app
# –î–æ–±–∞–≤—å—Ç–µ –≤ $PROFILE: . "C:\_PROJECTS\bedrock-app\bedrock_profile.ps1"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞
$Global:BEDROCK_PI_HOST = "192.168.1.234"
$Global:BEDROCK_PI_USER = "standa"
$Global:BEDROCK_PI_PATH = "~/bedrock-app"
$Global:BEDROCK_LOCAL_PATH = "C:\_PROJECTS\bedrock-app"
$Global:BEDROCK_GIT_REPO = "http://github.com/Standaoerby/bedrock-app/"

# –§—É–Ω–∫—Ü–∏–∏-–∞–ª–∏–∞—Å—ã –¥–ª—è Claude –ø–∞—Ç—á–µ–π
function cp-setup { .\claude_apply.ps1 setup }
function cp-check { .\claude_apply.ps1 check }
function cp-apply { .\claude_apply.ps1 apply }
function cp-sync { .\claude_apply.ps1 sync }
function cp-deploy { .\claude_apply.ps1 deploy }
function cp-rollback { param($n=1) .\claude_apply.ps1 rollback $n }
function cp-test { Test-NetConnection -ComputerName $BEDROCK_PI_HOST -Port 22 }

# SSH –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Pi
function ssh-pi { ssh "standa@192.168.1.234" }
function ssh-pi-logs { ssh "standa@192.168.1.234" "cd ~/bedrock-app && tail -f *.log" }
function ssh-pi-status { ssh "standa@192.168.1.234" "cd ~/bedrock-app && git status" }

# Rsync –∫–æ–º–∞–Ω–¥—ã (—Ç—Ä–µ–±—É–µ—Ç rsync for Windows –∏–ª–∏ WSL)
function sync-to-pi { 
    rsync -avz --exclude=.git --exclude=__pycache__ ./ "standa@192.168.1.234:~/bedrock-app/"
}
function sync-patches { 
    rsync -avz claude_patches/ "standa@192.168.1.234:~/bedrock-app/claude_patches/"
}
function sync-from-pi { 
    rsync -avz "standa@192.168.1.234:~/bedrock-app/" ./ --exclude=.git
}

# Git –∫–æ–º–∞–Ω–¥—ã
function git-push-bedrock { 
    git add .
    git commit -m "Update from Windows $(Get-Date -Format 'yyyy-MM-dd HH:mm')"
    git push origin main
}
function git-pull-bedrock { git pull origin main }
function git-status-pi { ssh "standa@192.168.1.234" "cd ~/bedrock-app && git status" }
function git-pull-pi { ssh "standa@192.168.1.234" "cd ~/bedrock-app && git pull origin main" }

# –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ workflow
function full-sync {
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..." -ForegroundColor Cyan
    cp-apply
    git-push-bedrock
    sync-to-pi
    git-pull-pi
    Write-Host "‚úÖ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
}

function quick-deploy {
    Write-Host "‚ö° –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π..." -ForegroundColor Cyan
    sync-to-pi
    ssh "standa@192.168.1.234" "cd ~/bedrock-app && ./claude_apply.sh apply"
    Write-Host "‚úÖ –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!" -ForegroundColor Green
}

# Python –∫–æ–º–∞–Ω–¥—ã –Ω–∞ Pi
function pi-python { param($script) ssh "standa@192.168.1.234" "cd ~/bedrock-app && python3 $script" }
function pi-pip { param($package) ssh "standa@192.168.1.234" "cd ~/bedrock-app && pip3 $package" }
function pi-run { ssh "standa@192.168.1.234" "cd ~/bedrock-app && python3 main.py" }

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Pi
function pi-htop { ssh "standa@192.168.1.234" "htop" }
function pi-temp { ssh "standa@192.168.1.234" "vcgencmd measure_temp" }
function pi-gpio { ssh "standa@192.168.1.234" "gpio readall" }
function pi-processes { ssh "standa@192.168.1.234" "ps aux | grep python" }

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞
function pi-logs { ssh "standa@192.168.1.234" "cd ~/bedrock-app && tail -n 50 *.log" }
function pi-errors { ssh "standa@192.168.1.234" "cd ~/bedrock-app && grep ERROR *.log | tail -20" }
function pi-debug { ssh "standa@192.168.1.234" "cd ~/bedrock-app && python3 -u main.py" }

# VS Code –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
function code-bedrock { code "C:\_PROJECTS\bedrock-app" }
function code-pi { code --remote "ssh-remote+standa@192.168.1.234" "~/bedrock-app" }

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
function bedrock-help {
    Write-Host "üöÄ Bedrock App - –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã PowerShell:" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "CLAUDE –ü–ê–¢–ß–ò:" -ForegroundColor Yellow
    Write-Host "  cp-setup     - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
    Write-Host "  cp-check     - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ç—á–µ–π"
    Write-Host "  cp-apply     - –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–µ–π"
    Write-Host "  cp-sync      - –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è"
    Write-Host "  cp-deploy    - –î–µ–ø–ª–æ–π –Ω–∞ Pi"
    Write-Host ""
    Write-Host "SSH & RSYNC:" -ForegroundColor Yellow
    Write-Host "  ssh-pi       - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Pi"
    Write-Host "  sync-to-pi   - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ Pi"
    Write-Host "  sync-from-pi - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å Pi"
    Write-Host ""
    Write-Host "GIT:" -ForegroundColor Yellow
    Write-Host "  git-push-bedrock - –ö–æ–º–º–∏—Ç –∏ push"
    Write-Host "  git-pull-pi      - Pull –Ω–∞ Pi"
    Write-Host ""
    Write-Host "–ú–û–ù–ò–¢–û–†–ò–ù–ì PI:" -ForegroundColor Yellow
    Write-Host "  pi-temp      - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU"
    Write-Host "  pi-htop      - –ü—Ä–æ—Ü–µ—Å—Å—ã"
    Write-Host "  pi-logs      - –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    Write-Host ""
    Write-Host "WORKFLOW:" -ForegroundColor Yellow
    Write-Host "  full-sync    - –ü—Ä–∏–º–µ–Ω–∏—Ç—å + commit + deploy + pull"
    Write-Host "  quick-deploy - –ë—ã—Å—Ç—Ä—ã–π –¥–µ–ø–ª–æ–π –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ"
    Write-Host ""
    Write-Host "VS CODE:" -ForegroundColor Yellow
    Write-Host "  code-bedrock - –û—Ç–∫—Ä—ã—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç"
    Write-Host "  code-pi      - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ Pi —á–µ—Ä–µ–∑ SSH"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
function bedrock-status {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Bedrock App..." -ForegroundColor Cyan
    Write-Host ""
    
    # –õ–æ–∫–∞–ª—å–Ω—ã–π git —Å—Ç–∞—Ç—É—Å
    Write-Host "üìÇ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å:" -ForegroundColor Yellow
    git status --porcelain
    Write-Host ""
    
    # –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Pi
    Write-Host "üîó –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Pi:" -ForegroundColor Yellow
    if (Test-NetConnection -ComputerName $BEDROCK_PI_HOST -Port 22 -WarningAction SilentlyContinue).TcpTestSucceeded {
        Write-Host "‚úÖ Pi –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
        
        # Git —Å—Ç–∞—Ç—É—Å –Ω–∞ Pi
        Write-Host ""
        Write-Host "üìÇ Git —Å—Ç–∞—Ç—É—Å –Ω–∞ Pi:" -ForegroundColor Yellow
        try {
            ssh "standa@192.168.1.234" "cd ~/bedrock-app && git status --porcelain"
        }
        catch {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è" -ForegroundColor Red
        }
        
        # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ Pi
        Write-Host ""
        Write-Host "üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ Pi:" -ForegroundColor Yellow
        try {
            ssh "standa@192.168.1.234" "vcgencmd measure_temp"
        }
        catch {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor Red
        }
    }
    else {
        Write-Host "‚ùå Pi –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ç—á–∞ –∏–∑ diff –≤ PowerShell
function Create-PatchFromDiff {
    param(
        [string]$OldFile,
        [string]$NewFile,
        [string]$PatchName
    )
    
    if (-not $OldFile -or -not $NewFile -or -not $PatchName) {
        Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: Create-PatchFromDiff -OldFile <—Å—Ç–∞—Ä—ã–π> -NewFile <–Ω–æ–≤—ã–π> -PatchName <–∏–º—è>" -ForegroundColor Yellow
        return
    }
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ git diff –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ç—á–∞
    git diff --no-index $OldFile $NewFile > "claude_patches\$PatchName.patch"
    Write-Host "‚úÖ –ü–∞—Ç—á —Å–æ–∑–¥–∞–Ω: claude_patches\$PatchName.patch" -ForegroundColor Green
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ç—á–∞ –∏–∑ Claude
function Claude-ToPatch {
    param([string]$PatchName)
    
    if (-not $PatchName) {
        Write-Host "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: Claude-ToPatch <–∏–º—è_–ø–∞—Ç—á–∞>" -ForegroundColor Yellow
        Write-Host "–ó–∞—Ç–µ–º –≤—Å—Ç–∞–≤—å—Ç–µ diff –æ—Ç Claude –∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+Z, Enter" -ForegroundColor Cyan
        return
    }
    
    Write-Host "üìù –í—Å—Ç–∞–≤—å—Ç–µ diff –æ—Ç Claude (Ctrl+Z, Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):" -ForegroundColor Cyan
    $content = @()
    do {
        $line = Read-Host
        if ($line -ne $null) { $content += $line }
    } while ($line -ne $null -and $line -ne "")
    
    $content | Out-File -FilePath "claude_patches\$PatchName.patch" -Encoding UTF8
    Write-Host "‚úÖ –ü–∞—Ç—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω: claude_patches\$PatchName.patch" -ForegroundColor Green
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏
    if ((.\claude_apply.ps1 check) -eq $true) {
        Write-Host "‚úÖ –ü–∞—Ç—á –≤–∞–ª–∏–¥–µ–Ω" -ForegroundColor Green
    }
    else {
        Write-Host "‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∞—Ç—á–µ–º" -ForegroundColor Red
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è VS Code —Å –∑–∞–¥–∞—á–∞–º–∏
function vscode-tasks {
    code . 
    Write-Host "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+Shift+P -> 'Tasks: Run Task' –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–¥–∞—á–∞–º Claude" -ForegroundColor Cyan
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PowerShell –¥–ª—è –ª—É—á—à–µ–π —Ä–∞–±–æ—Ç—ã
$PSDefaultParameterValues['Out-Default:OutVariable'] = 'LastResult'

# –£–ª—É—á—à–µ–Ω–Ω—ã–π prompt —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ Git –∏ Pi
function prompt {
    $currentPath = $PWD.Path
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É
    Write-Host "[" -NoNewline -ForegroundColor DarkGray
    Write-Host (Split-Path $currentPath -Leaf) -NoNewline -ForegroundColor Cyan
    Write-Host "] " -NoNewline -ForegroundColor DarkGray
    
    # Git —Å—Ç–∞—Ç—É—Å –µ—Å–ª–∏ –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if (Test-Path .git) {
        $gitBranch = git branch --show-current 2>$null
        if ($gitBranch) {
            Write-Host "($gitBranch) " -NoNewline -ForegroundColor Yellow
        }
    }
    
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä Pi —Å—Ç–∞—Ç—É—Å–∞ (–±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
    if ($currentPath -like "*bedrock-app*") {
        if (Test-NetConnection -ComputerName $BEDROCK_PI_HOST -Port 22 -WarningAction SilentlyContinue -InformationLevel Quiet).TcpTestSucceeded {
            Write-Host "üü¢ " -NoNewline
        }
        else {
            Write-Host "üî¥ " -NoNewline
        }
    }
    
    return "PS> "
}

# –ê–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç –¥–ª—è –Ω–∞—à–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
Register-ArgumentCompleter -CommandName cp-rollback -ParameterName n -ScriptBlock {
    param($commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameters)
    1..10 | Where-Object { $_ -like "$wordToComplete*" }
}

Write-Host "üöÄ Bedrock App PowerShell Profile –∑–∞–≥—Ä—É–∂–µ–Ω!" -ForegroundColor Green
Write-Host "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'bedrock-help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏" -ForegroundColor Cyan